{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bipin\\\\OneDrive\\\\Desktop\\\\blogs-context-starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { DndProvider } from \"react-dnd\";\n// import { HTML5Backend } from \"react-dnd-html5-backend\";\n// import TaskColumn from \"./components/TaskColumn\";\n// import TaskModal from \"./components/TaskModal\";\n// import Button from \"./components/Button\";\n\n// const initialColumns = [\n//   { id: \"general\", title: \"General Information\", tasks: [] },\n//   { id: \"backlog\", title: \"Backlog\", tasks: [] },\n//   { id: \"in-progress\", title: \"In Progress\", tasks: [] },\n//   { id: \"paused\", title: \"Paused\", tasks: [] },\n//   { id: \"launch\", title: \"Ready for Launch\", tasks: [] },\n// ];\n\n// const TaskManager = () => {\n//   const [columns, setColumns] = useState(initialColumns);\n//   const [modalOpen, setModalOpen] = useState(false);\n//   const [selectedColumn, setSelectedColumn] = useState(null);\n//   const [newTask, setNewTask] = useState({ title: \"\", assignees: [], status: \"\", startDate: \"\", endDate: \"\" });\n\n//   const openModal = (columnId) => {\n//     setSelectedColumn(columnId);\n//     setNewTask((prev) => ({ ...prev, status: columnId }));\n//     setModalOpen(true);\n//   };\n\n//   const addTask = () => {\n//     setColumns((prev) =>\n//       prev.map((col) =>\n//         col.id === newTask.status ? { ...col, tasks: [...col.tasks, newTask] } : col\n//       )\n//     );\n//     setModalOpen(false);\n//   };\n\n//   return (\n//     <DndProvider backend={HTML5Backend}>\n//       <div className=\"p-6 bg-gray-100 min-h-screen\">\n//         <h1 className=\"text-xl font-bold mb-4\">Task Manager</h1>\n//         <div className=\"flex gap-4 overflow-x-auto\">\n//           {columns.map((col) => (\n//             <div key={col.id} className=\"w-64 bg-white p-4 rounded-lg shadow-lg flex flex-col\">\n//               <div className=\"flex-1\">\n//                 <h2 className=\"font-semibold mb-2 border-b pb-2 text-center\">{col.title}</h2>\n//                 <TaskColumn column={col} />\n//               </div>\n//               <button \n//                 onClick={() => openModal(col.id)} \n//                 className=\"mt-2 w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 flex items-center justify-center\"\n//               >\n//                 + Add a card\n//               </button>\n//             </div>\n//           ))}\n//         </div>\n//         {modalOpen && <TaskModal setNewTask={setNewTask} addTask={addTask} setModalOpen={setModalOpen} />}\n//       </div>\n//     </DndProvider>\n//   );\n// };\n\n// export default TaskManager;\n\nimport React, { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport TaskColumn from \"./components/TaskColumn\";\nimport TaskModal from \"./components/TaskModal\";\nimport Button from \"./components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialColumns = [{\n  id: \"general\",\n  title: \"General Information\",\n  tasks: []\n}, {\n  id: \"backlog\",\n  title: \"Backlog\",\n  tasks: []\n}, {\n  id: \"in-progress\",\n  title: \"In Progress\",\n  tasks: []\n}, {\n  id: \"paused\",\n  title: \"Paused\",\n  tasks: []\n}, {\n  id: \"launch\",\n  title: \"Ready for Launch\",\n  tasks: []\n}];\nconst TaskManager = () => {\n  _s();\n  const [columns, setColumns] = useState(initialColumns);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedColumn, setSelectedColumn] = useState(null);\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    assignees: [],\n    status: \"\",\n    startDate: \"\",\n    endDate: \"\"\n  });\n  const openModal = columnId => {\n    setSelectedColumn(columnId);\n    setNewTask(prev => ({\n      ...prev,\n      status: columnId\n    }));\n    setModalOpen(true);\n  };\n  const addTask = () => {\n    setColumns(prev => prev.map(col => col.id === newTask.status ? {\n      ...col,\n      tasks: [...col.tasks, newTask]\n    } : col));\n    setModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-gray-200 min-h-screen flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-6\",\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-6 overflow-x-auto w-full justify-center\",\n        children: columns.map(col => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-72 bg-white p-4 rounded-lg shadow-md flex flex-col border\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold mb-3 border-b pb-2 text-gray-700 text-center\",\n            children: col.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 min-h-[200px]\",\n            children: /*#__PURE__*/_jsxDEV(TaskColumn, {\n              column: col\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => openModal(col.id),\n            className: \"mt-4 w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 flex items-center justify-center\",\n            children: \"+ Add a card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, col.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), modalOpen && /*#__PURE__*/_jsxDEV(TaskModal, {\n        setNewTask: setNewTask,\n        addTask: addTask,\n        setModalOpen: setModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManager, \"boywbE1vSTeCt+RkBi2fUsLQYTE=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","DndProvider","HTML5Backend","TaskColumn","TaskModal","Button","jsxDEV","_jsxDEV","initialColumns","id","title","tasks","TaskManager","_s","columns","setColumns","modalOpen","setModalOpen","selectedColumn","setSelectedColumn","newTask","setNewTask","assignees","status","startDate","endDate","openModal","columnId","prev","addTask","map","col","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","column","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bipin/OneDrive/Desktop/blogs-context-starter/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { DndProvider } from \"react-dnd\";\r\n// import { HTML5Backend } from \"react-dnd-html5-backend\";\r\n// import TaskColumn from \"./components/TaskColumn\";\r\n// import TaskModal from \"./components/TaskModal\";\r\n// import Button from \"./components/Button\";\r\n\r\n// const initialColumns = [\r\n//   { id: \"general\", title: \"General Information\", tasks: [] },\r\n//   { id: \"backlog\", title: \"Backlog\", tasks: [] },\r\n//   { id: \"in-progress\", title: \"In Progress\", tasks: [] },\r\n//   { id: \"paused\", title: \"Paused\", tasks: [] },\r\n//   { id: \"launch\", title: \"Ready for Launch\", tasks: [] },\r\n// ];\r\n\r\n// const TaskManager = () => {\r\n//   const [columns, setColumns] = useState(initialColumns);\r\n//   const [modalOpen, setModalOpen] = useState(false);\r\n//   const [selectedColumn, setSelectedColumn] = useState(null);\r\n//   const [newTask, setNewTask] = useState({ title: \"\", assignees: [], status: \"\", startDate: \"\", endDate: \"\" });\r\n\r\n//   const openModal = (columnId) => {\r\n//     setSelectedColumn(columnId);\r\n//     setNewTask((prev) => ({ ...prev, status: columnId }));\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const addTask = () => {\r\n//     setColumns((prev) =>\r\n//       prev.map((col) =>\r\n//         col.id === newTask.status ? { ...col, tasks: [...col.tasks, newTask] } : col\r\n//       )\r\n//     );\r\n//     setModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <DndProvider backend={HTML5Backend}>\r\n//       <div className=\"p-6 bg-gray-100 min-h-screen\">\r\n//         <h1 className=\"text-xl font-bold mb-4\">Task Manager</h1>\r\n//         <div className=\"flex gap-4 overflow-x-auto\">\r\n//           {columns.map((col) => (\r\n//             <div key={col.id} className=\"w-64 bg-white p-4 rounded-lg shadow-lg flex flex-col\">\r\n//               <div className=\"flex-1\">\r\n//                 <h2 className=\"font-semibold mb-2 border-b pb-2 text-center\">{col.title}</h2>\r\n//                 <TaskColumn column={col} />\r\n//               </div>\r\n//               <button \r\n//                 onClick={() => openModal(col.id)} \r\n//                 className=\"mt-2 w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 flex items-center justify-center\"\r\n//               >\r\n//                 + Add a card\r\n//               </button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         {modalOpen && <TaskModal setNewTask={setNewTask} addTask={addTask} setModalOpen={setModalOpen} />}\r\n//       </div>\r\n//     </DndProvider>\r\n//   );\r\n// };\r\n\r\n// export default TaskManager;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport TaskColumn from \"./components/TaskColumn\";\r\nimport TaskModal from \"./components/TaskModal\";\r\nimport Button from \"./components/Button\";\r\n\r\nconst initialColumns = [\r\n  { id: \"general\", title: \"General Information\", tasks: [] },\r\n  { id: \"backlog\", title: \"Backlog\", tasks: [] },\r\n  { id: \"in-progress\", title: \"In Progress\", tasks: [] },\r\n  { id: \"paused\", title: \"Paused\", tasks: [] },\r\n  { id: \"launch\", title: \"Ready for Launch\", tasks: [] },\r\n];\r\n\r\nconst TaskManager = () => {\r\n  const [columns, setColumns] = useState(initialColumns);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [selectedColumn, setSelectedColumn] = useState(null);\r\n  const [newTask, setNewTask] = useState({ title: \"\", assignees: [], status: \"\", startDate: \"\", endDate: \"\" });\r\n\r\n  const openModal = (columnId) => {\r\n    setSelectedColumn(columnId);\r\n    setNewTask((prev) => ({ ...prev, status: columnId }));\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const addTask = () => {\r\n    setColumns((prev) =>\r\n      prev.map((col) =>\r\n        col.id === newTask.status ? { ...col, tasks: [...col.tasks, newTask] } : col\r\n      )\r\n    );\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className=\"p-6 bg-gray-200 min-h-screen flex flex-col items-center\">\r\n        <h1 className=\"text-2xl font-bold mb-6\">Task Manager</h1>\r\n        <div className=\"flex gap-6 overflow-x-auto w-full justify-center\">\r\n          {columns.map((col) => (\r\n            <div key={col.id} className=\"w-72 bg-white p-4 rounded-lg shadow-md flex flex-col border\">\r\n              <h2 className=\"text-lg font-semibold mb-3 border-b pb-2 text-gray-700 text-center\">{col.title}</h2>\r\n              <div className=\"flex-1 min-h-[200px]\">\r\n                <TaskColumn column={col} />\r\n              </div>\r\n              <button \r\n                onClick={() => openModal(col.id)} \r\n                className=\"mt-4 w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 flex items-center justify-center\"\r\n              >\r\n                + Add a card\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {modalOpen && <TaskModal setNewTask={setNewTask} addTask={addTask} setModalOpen={setModalOpen} />}\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n};\r\n\r\nexport default TaskManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}