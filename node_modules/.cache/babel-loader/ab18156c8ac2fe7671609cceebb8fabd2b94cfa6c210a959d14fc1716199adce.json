{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bipin\\\\OneDrive\\\\Desktop\\\\blogs-context-starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { DndProvider } from \"react-dnd\";\n// import { HTML5Backend } from \"react-dnd-html5-backend\";\n// import TaskColumn from \"./components/TaskColumn\";\n// import TaskModal from \"./components/TaskModal\";\n\n// const initialColumns = [\n//   { id: \"general\", title: \"General Information\", tasks: [] },\n//   { id: \"backlog\", title: \"Backlog\", tasks: [] },\n//   { id: \"in-progress\", title: \"In Progress\", tasks: [] },\n//   { id: \"paused\", title: \"Paused\", tasks: [] },\n//   { id: \"launch\", title: \"Ready for Launch\", tasks: [] },\n// ];\n\n// const TaskManager = () => {\n//   const [columns, setColumns] = useState(initialColumns);\n//   const [modalOpen, setModalOpen] = useState(false);\n//   const [selectedColumn, setSelectedColumn] = useState(null);\n//   const [newTask, setNewTask] = useState({ title: \"\", assignees: [], status: \"\", startDate: \"\", endDate: \"\" });\n\n//   const openModal = (columnId) => {\n//     setSelectedColumn(columnId);\n//     setNewTask((prev) => ({ ...prev, status: columnId }));\n//     setModalOpen(true);\n//   };\n\n//   const addTask = () => {\n//     setColumns((prev) =>\n//       prev.map((col) =>\n//         col.id === newTask.status ? { ...col, tasks: [...col.tasks, newTask] } : col\n//       )\n//     );\n//     setModalOpen(false);\n//   };\n\n//   return (\n//     <DndProvider backend={HTML5Backend}>\n//       <div className=\"p-6 bg-gray-200 min-h-screen flex flex-col items-center\">\n//         <h1 className=\"text-2xl font-bold mb-6\">Task Manager</h1>\n//         {/* Updated to display all columns in a single row */}\n//         <div className=\"flex flex-row w-full gap-4 overflow-x-auto\">\n//           {columns.map((col) => (\n//             <div\n//               key={col.id}\n//               className=\"w-72 bg-white p-4 rounded-lg shadow-md flex flex-col border\"\n//             >\n//               {/* Task List Container */}\n//               <div className=\"flex-1 h-72  mb-4\">\n//                 <TaskColumn column={col} />\n//               </div>\n\n//               {/* Add Card Button */}\n//               <button \n//                 onClick={() => openModal(col.id)} \n//                 className=\"mt-auto w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 flex items-center justify-center\"\n//               >\n//                 + Add a card\n//               </button>\n//             </div>\n//           ))}\n//         </div>\n//         {modalOpen && <TaskModal setNewTask={setNewTask} addTask={addTask} setModalOpen={setModalOpen} />}\n//       </div>\n//     </DndProvider>\n//   );\n// };\n\n// export default TaskManager;\n\n// import React, { useState } from \"react\";\n// import { DndProvider } from \"react-dnd\";\n// import { HTML5Backend } from \"react-dnd-html5-backend\";\n// import TaskColumn from \"./components/TaskColumn\";\n// import TaskModal from \"./components/TaskModal\";\n\n// const initialColumns = [\n//   { id: \"general\", title: \"General Information\", tasks: [] },\n//   { id: \"backlog\", title: \"Backlog\", tasks: [] },\n//   { id: \"in-progress\", title: \"In Progress\", tasks: [] },\n//   { id: \"paused\", title: \"Paused\", tasks: [] },\n//   { id: \"launch\", title: \"Ready for Launch\", tasks: [] },\n// ];\n\n// const TaskManager = () => {\n//   const [view, setView] = useState(\"taskManager\"); // Toggle state\n//   const [columns, setColumns] = useState(initialColumns);\n//   const [modalOpen, setModalOpen] = useState(false);\n//   const [selectedColumn, setSelectedColumn] = useState(null);\n//   const [newTask, setNewTask] = useState({ title: \"\", assignees: [], status: \"\", startDate: \"\", endDate: \"\" });\n\n//   const openModal = (columnId) => {\n//     setSelectedColumn(columnId);\n//     setNewTask((prev) => ({ ...prev, status: columnId }));\n//     setModalOpen(true);\n//   };\n\n//   const addTask = () => {\n//     setColumns((prev) =>\n//       prev.map((col) =>\n//         col.id === newTask.status ? { ...col, tasks: [...col.tasks, newTask] } : col\n//       )\n//     );\n//     setModalOpen(false);\n//   };\n\n//   return (\n//     <DndProvider backend={HTML5Backend}>\n//       <div className=\"p-6 bg-gray-200 min-h-screen flex flex-col items-center\">\n//         <h1 className=\"text-2xl font-bold mb-4\">Project Management</h1>\n\n//         {/* Toggle Button */}\n//         <button\n//           onClick={() => setView(view === \"taskManager\" ? \"dashboard\" : \"taskManager\")}\n//           className=\"mb-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n//         >\n//           Switch to {view === \"taskManager\" ? \"Members Dashboard\" : \"Task Manager\"}\n//         </button>\n\n//         {/* Conditional Rendering */}\n//         {view === \"taskManager\" ? (\n//           <div className=\"flex flex-row w-full gap-4 overflow-x-auto\">\n//             {columns.map((col) => (\n//               <div\n//                 key={col.id}\n//                 className=\"w-72 bg-white p-4 rounded-lg shadow-md flex flex-col border\"\n//               >\n//                 <div className=\"flex-1 h-72 mb-4\">\n//                   <TaskColumn column={col} />\n//                 </div>\n\n//                 <button \n//                   onClick={() => openModal(col.id)} \n//                   className=\"mt-auto w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 flex items-center justify-center\"\n//                 >\n//                   + Add a card\n//                 </button>\n//               </div>\n//             ))}\n//           </div>\n//         ) : (\n//           <MembersDashboard />\n//         )}\n\n//         {modalOpen && <TaskModal setNewTask={setNewTask} addTask={addTask} setModalOpen={setModalOpen} />}\n//       </div>\n//     </DndProvider>\n//   );\n// };\n\n// // ðŸ†• Members Dashboard Component\n// const MembersDashboard = () => {\n//   return (\n//     <div className=\"w-full max-w-5xl bg-white p-6 rounded-lg shadow-md\">\n//       <h2 className=\"text-xl font-semibold mb-4 text-center\">Members Dashboard</h2>\n\n//       {/* Timeline UI - Placeholder */}\n//       <div className=\"border rounded-lg p-4 bg-gray-100\">\n//         <p className=\"text-center text-gray-600\">ðŸ“… Timeline View Coming Soon...</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TaskManager;\n\nimport React, { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport TaskColumn from \"./components/TaskColumn\";\nimport TaskModal from \"./components/TaskModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialColumns = [{\n  id: \"general\",\n  title: \"General Information\",\n  tasks: []\n}, {\n  id: \"backlog\",\n  title: \"Backlog\",\n  tasks: []\n}, {\n  id: \"in-progress\",\n  title: \"In Progress\",\n  tasks: []\n}, {\n  id: \"paused\",\n  title: \"Paused\",\n  tasks: []\n}, {\n  id: \"launch\",\n  title: \"Ready for Launch\",\n  tasks: []\n}];\nconst TaskManager = () => {\n  _s();\n  const [view, setView] = useState(\"taskManager\"); // Toggle state\n  const [columns, setColumns] = useState(initialColumns);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedColumn, setSelectedColumn] = useState(null);\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    assignees: [],\n    status: \"\",\n    startDate: \"\",\n    endDate: \"\"\n  });\n  const openModal = columnId => {\n    setSelectedColumn(columnId);\n    setNewTask(prev => ({\n      ...prev,\n      status: columnId\n    }));\n    setModalOpen(true);\n  };\n  const addTask = () => {\n    setColumns(prev => prev.map(col => col.id === newTask.status ? {\n      ...col,\n      tasks: [...col.tasks, newTask]\n    } : col));\n    setModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-gray-200 min-h-screen flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Project Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView(view === \"taskManager\" ? \"dashboard\" : \"taskManager\"),\n        className: \"mb-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n        children: [\"Switch to \", view === \"taskManager\" ? \"Members Dashboard\" : \"Task Manager\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), view === \"taskManager\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row w-full gap-4 overflow-x-auto\",\n        children: columns.map(col => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-72 bg-white p-4 rounded-lg shadow-md flex flex-col border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 h-72 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(TaskColumn, {\n              column: col\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => openModal(col.id),\n            className: \"mt-auto w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 flex items-center justify-center\",\n            children: \"+ Add a card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)]\n        }, col.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MembersDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), modalOpen && /*#__PURE__*/_jsxDEV(TaskModal, {\n        setNewTask: setNewTask,\n        addTask: addTask,\n        setModalOpen: setModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n\n// ðŸ†• Members Dashboard Component\n_s(TaskManager, \"MGz/ridJ0vEzTp1shJED0LXUXBU=\");\n_c = TaskManager;\nconst MembersDashboard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-5xl bg-white p-6 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4 text-center\",\n      children: \"Members Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border rounded-lg p-4 bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-600\",\n        children: \"\\uD83D\\uDCC5 Timeline View Coming Soon...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MembersDashboard;\nexport default TaskManager;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskManager\");\n$RefreshReg$(_c2, \"MembersDashboard\");","map":{"version":3,"names":["React","useState","DndProvider","HTML5Backend","TaskColumn","TaskModal","jsxDEV","_jsxDEV","initialColumns","id","title","tasks","TaskManager","_s","view","setView","columns","setColumns","modalOpen","setModalOpen","selectedColumn","setSelectedColumn","newTask","setNewTask","assignees","status","startDate","endDate","openModal","columnId","prev","addTask","map","col","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","column","MembersDashboard","_c","_c2","$RefreshReg$"],"sources":["C:/Users/bipin/OneDrive/Desktop/blogs-context-starter/src/App.js"],"sourcesContent":["\r\n\r\n// import React, { useState } from \"react\";\r\n// import { DndProvider } from \"react-dnd\";\r\n// import { HTML5Backend } from \"react-dnd-html5-backend\";\r\n// import TaskColumn from \"./components/TaskColumn\";\r\n// import TaskModal from \"./components/TaskModal\";\r\n\r\n// const initialColumns = [\r\n//   { id: \"general\", title: \"General Information\", tasks: [] },\r\n//   { id: \"backlog\", title: \"Backlog\", tasks: [] },\r\n//   { id: \"in-progress\", title: \"In Progress\", tasks: [] },\r\n//   { id: \"paused\", title: \"Paused\", tasks: [] },\r\n//   { id: \"launch\", title: \"Ready for Launch\", tasks: [] },\r\n// ];\r\n\r\n// const TaskManager = () => {\r\n//   const [columns, setColumns] = useState(initialColumns);\r\n//   const [modalOpen, setModalOpen] = useState(false);\r\n//   const [selectedColumn, setSelectedColumn] = useState(null);\r\n//   const [newTask, setNewTask] = useState({ title: \"\", assignees: [], status: \"\", startDate: \"\", endDate: \"\" });\r\n\r\n//   const openModal = (columnId) => {\r\n//     setSelectedColumn(columnId);\r\n//     setNewTask((prev) => ({ ...prev, status: columnId }));\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const addTask = () => {\r\n//     setColumns((prev) =>\r\n//       prev.map((col) =>\r\n//         col.id === newTask.status ? { ...col, tasks: [...col.tasks, newTask] } : col\r\n//       )\r\n//     );\r\n//     setModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <DndProvider backend={HTML5Backend}>\r\n//       <div className=\"p-6 bg-gray-200 min-h-screen flex flex-col items-center\">\r\n//         <h1 className=\"text-2xl font-bold mb-6\">Task Manager</h1>\r\n//         {/* Updated to display all columns in a single row */}\r\n//         <div className=\"flex flex-row w-full gap-4 overflow-x-auto\">\r\n//           {columns.map((col) => (\r\n//             <div\r\n//               key={col.id}\r\n//               className=\"w-72 bg-white p-4 rounded-lg shadow-md flex flex-col border\"\r\n//             >\r\n//               {/* Task List Container */}\r\n//               <div className=\"flex-1 h-72  mb-4\">\r\n//                 <TaskColumn column={col} />\r\n//               </div>\r\n\r\n//               {/* Add Card Button */}\r\n//               <button \r\n//                 onClick={() => openModal(col.id)} \r\n//                 className=\"mt-auto w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 flex items-center justify-center\"\r\n//               >\r\n//                 + Add a card\r\n//               </button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         {modalOpen && <TaskModal setNewTask={setNewTask} addTask={addTask} setModalOpen={setModalOpen} />}\r\n//       </div>\r\n//     </DndProvider>\r\n//   );\r\n// };\r\n\r\n// export default TaskManager;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { DndProvider } from \"react-dnd\";\r\n// import { HTML5Backend } from \"react-dnd-html5-backend\";\r\n// import TaskColumn from \"./components/TaskColumn\";\r\n// import TaskModal from \"./components/TaskModal\";\r\n\r\n// const initialColumns = [\r\n//   { id: \"general\", title: \"General Information\", tasks: [] },\r\n//   { id: \"backlog\", title: \"Backlog\", tasks: [] },\r\n//   { id: \"in-progress\", title: \"In Progress\", tasks: [] },\r\n//   { id: \"paused\", title: \"Paused\", tasks: [] },\r\n//   { id: \"launch\", title: \"Ready for Launch\", tasks: [] },\r\n// ];\r\n\r\n// const TaskManager = () => {\r\n//   const [view, setView] = useState(\"taskManager\"); // Toggle state\r\n//   const [columns, setColumns] = useState(initialColumns);\r\n//   const [modalOpen, setModalOpen] = useState(false);\r\n//   const [selectedColumn, setSelectedColumn] = useState(null);\r\n//   const [newTask, setNewTask] = useState({ title: \"\", assignees: [], status: \"\", startDate: \"\", endDate: \"\" });\r\n\r\n//   const openModal = (columnId) => {\r\n//     setSelectedColumn(columnId);\r\n//     setNewTask((prev) => ({ ...prev, status: columnId }));\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const addTask = () => {\r\n//     setColumns((prev) =>\r\n//       prev.map((col) =>\r\n//         col.id === newTask.status ? { ...col, tasks: [...col.tasks, newTask] } : col\r\n//       )\r\n//     );\r\n//     setModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <DndProvider backend={HTML5Backend}>\r\n//       <div className=\"p-6 bg-gray-200 min-h-screen flex flex-col items-center\">\r\n//         <h1 className=\"text-2xl font-bold mb-4\">Project Management</h1>\r\n\r\n//         {/* Toggle Button */}\r\n//         <button\r\n//           onClick={() => setView(view === \"taskManager\" ? \"dashboard\" : \"taskManager\")}\r\n//           className=\"mb-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n//         >\r\n//           Switch to {view === \"taskManager\" ? \"Members Dashboard\" : \"Task Manager\"}\r\n//         </button>\r\n\r\n//         {/* Conditional Rendering */}\r\n//         {view === \"taskManager\" ? (\r\n//           <div className=\"flex flex-row w-full gap-4 overflow-x-auto\">\r\n//             {columns.map((col) => (\r\n//               <div\r\n//                 key={col.id}\r\n//                 className=\"w-72 bg-white p-4 rounded-lg shadow-md flex flex-col border\"\r\n//               >\r\n//                 <div className=\"flex-1 h-72 mb-4\">\r\n//                   <TaskColumn column={col} />\r\n//                 </div>\r\n\r\n//                 <button \r\n//                   onClick={() => openModal(col.id)} \r\n//                   className=\"mt-auto w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 flex items-center justify-center\"\r\n//                 >\r\n//                   + Add a card\r\n//                 </button>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         ) : (\r\n//           <MembersDashboard />\r\n//         )}\r\n\r\n//         {modalOpen && <TaskModal setNewTask={setNewTask} addTask={addTask} setModalOpen={setModalOpen} />}\r\n//       </div>\r\n//     </DndProvider>\r\n//   );\r\n// };\r\n\r\n// // ðŸ†• Members Dashboard Component\r\n// const MembersDashboard = () => {\r\n//   return (\r\n//     <div className=\"w-full max-w-5xl bg-white p-6 rounded-lg shadow-md\">\r\n//       <h2 className=\"text-xl font-semibold mb-4 text-center\">Members Dashboard</h2>\r\n      \r\n//       {/* Timeline UI - Placeholder */}\r\n//       <div className=\"border rounded-lg p-4 bg-gray-100\">\r\n//         <p className=\"text-center text-gray-600\">ðŸ“… Timeline View Coming Soon...</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TaskManager;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport TaskColumn from \"./components/TaskColumn\";\r\nimport TaskModal from \"./components/TaskModal\";\r\n\r\nconst initialColumns = [\r\n  { id: \"general\", title: \"General Information\", tasks: [] },\r\n  { id: \"backlog\", title: \"Backlog\", tasks: [] },\r\n  { id: \"in-progress\", title: \"In Progress\", tasks: [] },\r\n  { id: \"paused\", title: \"Paused\", tasks: [] },\r\n  { id: \"launch\", title: \"Ready for Launch\", tasks: [] },\r\n];\r\n\r\nconst TaskManager = () => {\r\n  const [view, setView] = useState(\"taskManager\"); // Toggle state\r\n  const [columns, setColumns] = useState(initialColumns);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [selectedColumn, setSelectedColumn] = useState(null);\r\n  const [newTask, setNewTask] = useState({ title: \"\", assignees: [], status: \"\", startDate: \"\", endDate: \"\" });\r\n\r\n  const openModal = (columnId) => {\r\n    setSelectedColumn(columnId);\r\n    setNewTask((prev) => ({ ...prev, status: columnId }));\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const addTask = () => {\r\n    setColumns((prev) =>\r\n      prev.map((col) =>\r\n        col.id === newTask.status ? { ...col, tasks: [...col.tasks, newTask] } : col\r\n      )\r\n    );\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className=\"p-6 bg-gray-200 min-h-screen flex flex-col items-center\">\r\n        <h1 className=\"text-2xl font-bold mb-4\">Project Management</h1>\r\n\r\n        {/* Toggle Button */}\r\n        <button\r\n          onClick={() => setView(view === \"taskManager\" ? \"dashboard\" : \"taskManager\")}\r\n          className=\"mb-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n        >\r\n          Switch to {view === \"taskManager\" ? \"Members Dashboard\" : \"Task Manager\"}\r\n        </button>\r\n\r\n        {/* Conditional Rendering */}\r\n        {view === \"taskManager\" ? (\r\n          <div className=\"flex flex-row w-full gap-4 overflow-x-auto\">\r\n            {columns.map((col) => (\r\n              <div\r\n                key={col.id}\r\n                className=\"w-72 bg-white p-4 rounded-lg shadow-md flex flex-col border\"\r\n              >\r\n                <div className=\"flex-1 h-72 mb-4\">\r\n                  <TaskColumn column={col} />\r\n                </div>\r\n\r\n                <button \r\n                  onClick={() => openModal(col.id)} \r\n                  className=\"mt-auto w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 flex items-center justify-center\"\r\n                >\r\n                  + Add a card\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <MembersDashboard />\r\n        )}\r\n\r\n        {modalOpen && <TaskModal setNewTask={setNewTask} addTask={addTask} setModalOpen={setModalOpen} />}\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n};\r\n\r\n// ðŸ†• Members Dashboard Component\r\nconst MembersDashboard = () => {\r\n  return (\r\n    <div className=\"w-full max-w-5xl bg-white p-6 rounded-lg shadow-md\">\r\n      <h2 className=\"text-xl font-semibold mb-4 text-center\">Members Dashboard</h2>\r\n      \r\n      {/* Timeline UI - Placeholder */}\r\n      <div className=\"border rounded-lg p-4 bg-gray-100\">\r\n        <p className=\"text-center text-gray-600\">ðŸ“… Timeline View Coming Soon...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskManager;\r\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,WAAW;AACvC,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAG,CACrB;EAAEC,EAAE,EAAE,SAAS;EAAEC,KAAK,EAAE,qBAAqB;EAAEC,KAAK,EAAE;AAAG,CAAC,EAC1D;EAAEF,EAAE,EAAE,SAAS;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAG,CAAC,EAC9C;EAAEF,EAAE,EAAE,aAAa;EAAEC,KAAK,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAG,CAAC,EACtD;EAAEF,EAAE,EAAE,QAAQ;EAAEC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}